demo.oci.yaml
=============

plugin: oracle.oci.oci

regions:
 - us-ashburn-1

compartments:
 - compartment_ocid: "your compartment OCID"
   fetch_hosts_from_subcompartments: false



create.yaml
------------

---
- hosts: localhost
  become: true
  tasks:
    - name : create file
      file: path=/tmp/testfile state=touch
    - name : print
      debug:
       msg: file created
 
---
 - hosts: localhost
   become: true
   tasks:
   - name: install packages
     yum: name={{item}} state=latest
     loop:
      - openssl-devel
      - glibc-devel
      - htop
   - name : print message
      debug:
       msg: file created
       
       
installer.yaml
----------------

- name: Verify Repository
  hosts: localhost
  become: yes
  tasks:
  - name: Add repository
    yum_repository:
     name: epel
     description: EPEL YUM repo
     baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/

  - name: Add multiple repositories into the same file (2/2)
    yum_repository:
       name: rpmforge
       description: RPMforge YUM repo
       file: external_repos
       baseurl: http://apt.sw.be/redhat/el7/en/$basearch/rpmforge
       mirrorlist: http://mirrorlist.repoforge.org/el7/mirrors-rpmforge
       enabled: no

 # Handler showing how to clean yum metadata cache
  - name: yum-clean-metadata
    command: yum clean metadata
    args:
      warn: no

  # Example removing a repository and cleaning up metadata cache
  - name: Remove repository (and clean up left-over metadata)
    yum_repository:
     name: epel
     state: absent

  - name: Remove repository from a specific repo file
    yum_repository:
        name: epel
        file: external_repos
        state: absent

  - name: print details
    debug: 
      msg: "Installation and uninstallation done " 


remote host management
======================

plugin: oracle.oci.oci

regions:
 - us-ashburn-1

compartments:
 - compartment_ocid: ""
   fetch_hosts_from_subcompartments: false

filters:
 - lifecycle_state: "RUNNING"


Ansible YAML

- name: read file on host
  hosts: all
  remote_user: opc
  vars:
   contents: " "
  tasks:
   - name: Read the file
     command: cat /home/opc/.ssh/authorized_keys
     register: contents

   - name: print file
     ansible.builtin.debug:
      msg: "the content of file is {{ contents }}"

   - name: write a file
     file: path=/home/opc/configfiles state=touch

   - name: closure
     ansible.builtin.debug:
        msg : "file created in {{inventory_hostname}}"
        

Httpd local
============

- hosts: localhost
  become: true
  tasks:
  - name : install http
    yum: name=httpd state=latest
  - name: start and enable httpd
    service: name=httpd state=restarted enabled=yes
  handlers:
  - name: restart apache
    service: name=httpd state=restarted
